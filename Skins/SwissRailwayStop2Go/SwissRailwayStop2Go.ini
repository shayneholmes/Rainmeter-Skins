;---------------------------------------------------------------------
; Swiss Railway Clock with Stop2Go

[Rainmeter]
Author=Shayne
Update=50

[Variables]
@include=#SKINSPATH#Settings.inc

;--------------
; FORMATTING OPTIONS
ClockDiameter=630
ClockRadius=(#ClockDiameter#/2)
OrbitWidth=10
ClockEdgeWidth=0
WidthOfSegments=7
SpaceBetweenSegments=7
OrbitColorValue=192
OrbitColor=#OrbitColorValue#,#OrbitColorValue#,#OrbitColorValue#,255
SkewAmount=0
Offset=0.75
;--------------
; AUTO-COMPUTED VARIABLES
NumberOfSegments=(floor(2*PI*#ClockRadius#/(#WidthOfSegments#+#SpaceBetweenSegments#)))

;=
; constants (don't edit!)
;============================
SCRIPT=#@#scripts/
INC=#@#includes/

; STYLES
[styleMarkerMinute]
LineColor=#OrbitColor#
H=(#ClockDiameter#)
W=(#ClockDiameter#)
X=(-#ClockRadius#)
;Y=(-#OrbitWidth#/2)
UpdateDivider=-1
LineStart=(#ClockRadius#-#OrbitWidth#)
LineLength=(#ClockRadius#)
StartAngle=(3/2*PI-#WidthOfSegments#/#ClockRadius#/2)
RotationAngle=(#WidthOfSegments#/#ClockRadius#)
Solid=1
AntiAlias=1
UpdateDivider=-1

[styleMarkerHour]
LineColor=#OrbitColor#
H=(#ClockDiameter#)
W=(#ClockDiameter#)
X=(-#ClockRadius#)
;Y=(-#OrbitWidth#/2)
UpdateDivider=-1
LineStart=(#ClockRadius#-#OrbitWidth#)
LineLength=(#ClockRadius#)
StartAngle=(3/2*PI-#WidthOfSegments#/#ClockRadius#/2)
RotationAngle=(#WidthOfSegments#/#ClockRadius#)
Solid=1
AntiAlias=1
UpdateDivider=-1

;----------------------------------------------
; METERS
;
; Drawn in z-order to ensure that everything looks great!

;-----------------------
; CLOCK background

[MeterOrbitClickableBackground]
Meter=Roundline
LineColor=0,0,0,255
H=(#ClockDiameter#)
W=(#ClockDiameter#)
UpdateDivider=-1
LineStart=0
LineLength=(#ClockRadius#)
Solid=1
AntiAlias=1

[MarkersMinute]
Measure=Script
ScriptFile=#SCRIPT#Factory.lua
IncFile=#INC#Chunks.inc
Number=(#NumberOfSegments#+1)
SectionName=Chunk%%
Option0=Meter
Value0=Roundline
Option1=MeterStyle
Value1=styleMarkerMinute
Option2=TransformationMatrix
Value2={cos(2*PI/#NumberOfSegments#*%%)};{-sin(2*PI/#NumberOfSegments#*%%)};{(#SkewAmount#)*cos(2*PI/#NumberOfSegments#*%%)+sin(2*PI/#NumberOfSegments#*%%)};{cos(2*PI/#NumberOfSegments#*%%)-(#SkewAmount#)*sin(2*PI/#NumberOfSegments#*%%)};{(1-sin(2*PI/#NumberOfSegments#*%%))*#ClockRadius#+#ClockEdgeWidth#};{(1-cos(2*PI/#NumberOfSegments#*%%))*#ClockRadius#+#ClockEdgeWidth#}
; No skew
;Value2={cos(2*PI/#NumberOfSegments#*%%)};{-sin(2*PI/#NumberOfSegments#*%%)};{sin(2*PI/#NumberOfSegments#*%%)};{cos(2*PI/#NumberOfSegments#*%%)};{(-sin(2*PI/#NumberOfSegments#*%%)+1)*#ClockRadius#};{(-cos(2*PI/#NumberOfSegments#*%%)+1)*#ClockRadius#}
;Value2=1;0;-0.5;1;#ClockRadius#;#ClockRadius#
UpdateDivider=-1
@Include=#INC#Chunks.inc

[sFactoryMarkersHour]
Measure=Script
ScriptFile=#SCRIPT#Factory.lua
IncFile=#INC#MarkersHour.inc
Number=(#NumberOfSegments#+1)
SectionName=ChunkBot%%
Option0=Meter
Value0=Roundline
Option1=MeterStyle
Value1=styleMarkerHour
Option2=TransformationMatrix
Value2={-cos(2*PI/#NumberOfSegments#*%%)};{sin(2*PI/#NumberOfSegments#*%%)};{-(-#SkewAmount#)*cos(2*PI/#NumberOfSegments#*%%)-sin(2*PI/#NumberOfSegments#*%%)};{-cos(2*PI/#NumberOfSegments#*%%)+(-#SkewAmount#)*sin(2*PI/#NumberOfSegments#*%%)};{(1-sin(2*PI/#NumberOfSegments#*%%))*(#ClockRadius#-#Offset#)+#ClockEdgeWidth#+#Offset#};{(1-cos(2*PI/#NumberOfSegments#*%%))*(#ClockRadius#-#Offset#)+#ClockEdgeWidth#+#Offset#}
; No skew
;Value2={cos(2*PI/#NumberOfSegments#*%%)};{-sin(2*PI/#NumberOfSegments#*%%)};{sin(2*PI/#NumberOfSegments#*%%)};{cos(2*PI/#NumberOfSegments#*%%)};{(-sin(2*PI/#NumberOfSegments#*%%)+1)*#ClockRadius#};{(-cos(2*PI/#NumberOfSegments#*%%)+1)*#ClockRadius#}
;Value2=1;0;-0.5;1;#ClockRadius#;#ClockRadius#
UpdateDivider=-1
@Include=#INC#MarkersHour.inc

; Helper script to always refresh skin twice instead of once
; This is so that it loads the updated .inc files
[sRefresher]
Measure=Script
ScriptFile=#SCRIPT#Refresher.lua
UpdateDivider=-1
Refreshed=0
